<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/task  
       				    http://www.springframework.org/schema/task/spring-task.xsd">

	<description>Spring Configuration</description>

	<context:annotation-config />	
	<task:annotation-driven executor="defaultaExecutor" scheduler="scheduler" />
	<task:scheduler id="scheduler" pool-size="5" />  
	<task:executor id="defaultaExecutor" pool-size="10-100" queue-capacity="10" keep-alive="10" />



	<context:component-scan base-package="com.kaysen.shop">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<context:property-placeholder location="classpath*:*.properties" file-encoding="UTF-8"/>

	<aop:aspectj-autoproxy proxy-target-class="true" expose-proxy="true" />


<!-- 系统配置参数. -->      
   <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">      
       <!-- 多个PropertyPlaceholderConfigurer，需要设置本属性为true. -->  
       <property name="ignoreUnresolvablePlaceholders" value="true" />          
       <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />          
   </bean>

	<!-- 用于持有ApplicationContext,可以使用SpringContextHolder.getBean('xxxx')的静态方法得到spring bean对象 -->
<!--	<bean class="com.anhry.app.util.SpringContextHolder" lazy-init="false" />-->

     <import resource="spring-datasource.xml"></import>
	<!--<import resource="spring-jedis.xml"></import>-->
</beans>