<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 权限管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realms">
            <list>
                <ref bean="shiroDbRealm"></ref>
                <!--				<ref bean="shiroLawyerDbRealm"></ref>-->
                <!--				<ref bean="shiroCpsmDbRealm"></ref>-->
            </list>
        </property>
    </bean>

    <!-- 登录规则  -->
    <bean id="shiroDbRealm" class="com.kaysen.shop.service.realm.ShiroDbRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>


    <!--内部过滤器配置-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- shiro的核心安全接口 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 要求登录时的链接 -->
        <property name="loginUrl" value="/"/>

        <!-- 未授权时要跳转的连接 -->
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>
        <!-- shiro连接约束配置 -->
        <property name="filterChainDefinitions">
            <value>
                <!--静态资源直接通过-->
                /static/login/** = anon
                /static/login/**/** = anon
                /static/js/myjs/** = authc
                /static/js/** = anon
                /code.do = anon
                /system/login/** = anon
                /app**/** = anon
                /mobile/** = anon
                /mobiles/** = anon
                /weixin/** = anon
                /resource/** = anon
                /uploadify = anon
                /uploadify/uploadfile =anon
                /druid/** = anon
                /** = authc
            </value>
        </property>
    </bean>


    <!-- shiro缓存工厂类 -->
    <bean id="shiroCacheManager" class="com.anhry.app.shop.redis.cache.impl.ShiroCacheManager"></bean>
    <!-- shiro缓存管理实现类 -->
    <bean id="shiroCacheImpl" class="com.anhry.app.shop.redis.cache.impl.ShiroCacheImpl"></bean>

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="com.anhry.app.shop.service.realm.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="shiroCacheManager"/>
    </bean>

    <!-- LifecycleBeanPostProcessor用于在实现了Initializable接口的Shiro bean初始化时调用Initializable接口回调，在实现了Destroyable接口的Shiro bean销毁时调用 Destroyable接口回调 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
</beans>